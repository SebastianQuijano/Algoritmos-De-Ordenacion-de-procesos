/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Multinivel;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author Brownie
 */
public class MultinivelInterfaz extends javax.swing.JFrame {

    MetodosMn a;
    /**
     * Creates new form MultinivelInterfaz
     */
    public MultinivelInterfaz() {
        initComponents();
         setLocationRelativeTo(null);
        t = new Timer(10, acciones);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        a = new MetodosMn();
        setTitle("Planificación de Procesos: Colas multinivel");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla3 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        etiquetaTiempo = new javax.swing.JLabel();
        btnIniciar = new javax.swing.JButton();
        btnPausa = new javax.swing.JButton();
        btnDetener = new javax.swing.JButton();
        prioridad = new javax.swing.JTextField();
        nombre = new javax.swing.JTextField();
        rafaga = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        error = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Prioridad", "Nombre", "Rafaga"
            }
        ));
        jScrollPane1.setViewportView(tabla1);

        tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Prioridad", "Nombre", "Rafaga"
            }
        ));
        jScrollPane2.setViewportView(tabla2);

        tabla3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Prioridad", "Nombre", "Rafaga"
            }
        ));
        jScrollPane3.setViewportView(tabla3);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Tiempo Transcurrido");

        etiquetaTiempo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        etiquetaTiempo.setText("00:00:00:00");

        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        btnPausa.setText("Pausa");
        btnPausa.setEnabled(false);
        btnPausa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPausaActionPerformed(evt);
            }
        });

        btnDetener.setText("Detener");
        btnDetener.setEnabled(false);
        btnDetener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetenerActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        error.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        error.setForeground(new java.awt.Color(255, 0, 0));

        jLabel2.setText("Nivel 1");

        jLabel3.setText("Nivel 2");

        jLabel4.setText("Nivel 3");

        jLabel5.setText("RoundRobin");

        jLabel6.setText("RoundRobin");

        jLabel7.setText("FCFS");

        jLabel8.setText("Prioridad");

        jLabel9.setText("Nombre");

        jLabel10.setText("Ráfaga");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel2)
                        .addGap(120, 120, 120)
                        .addComponent(jLabel3)
                        .addGap(123, 123, 123)
                        .addComponent(jLabel4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(prioridad, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(btnAgregar)
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(nombre)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rafaga, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnIniciar)
                                .addGap(49, 49, 49)
                                .addComponent(btnPausa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                .addComponent(btnDetener)
                                .addGap(18, 18, 18))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(etiquetaTiempo))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel8)
                        .addGap(61, 61, 61)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(48, 48, 48))))
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel5)
                .addGap(100, 100, 100)
                .addComponent(jLabel6)
                .addGap(107, 107, 107)
                .addComponent(jLabel7)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prioridad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rafaga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnAgregar)
                        .addGap(18, 18, 18)
                        .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(etiquetaTiempo)
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnIniciar)
                            .addComponent(btnPausa)
                            .addComponent(btnDetener)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        int g = Integer.parseInt(prioridad.getText());
        if (g==1) {
            a.AgregarProceso1(nombre.getText(), Integer.parseInt(rafaga.getText()), Integer.parseInt(prioridad.getText()));
        }else
            if (g==2) {
            a.AgregarProceso2(nombre.getText(), Integer.parseInt(rafaga.getText()), Integer.parseInt(prioridad.getText()));
        }else
                if (g==3) {
            a.AgregarProceso3(nombre.getText(), Integer.parseInt(rafaga.getText()), Integer.parseInt(prioridad.getText()));
        }
        
        
        if (Integer.parseInt(prioridad.getText())==1) {
             if (a.getSizeArray() < 15) {
            for (int i = 0; i < a.getNivel1().size(); i++) {
            tabla1.setValueAt(a.getNivel1().get(i).getPrioridad(), i, 0);
            }
            for (int i = 0; i < a.getNivel1().size(); i++) {
                tabla1.setValueAt(a.getNivel1().get(i).getNombre(), i, 1);
            }
            for (int i = 0; i < a.getNivel1().size(); i++) {
                tabla1.setValueAt(a.getNivel1().get(i).getRafaga(), i, 2);
            }
            
        }else{
            for (int i = 0; i < 15; i++) {
            tabla1.setValueAt(a.getNivel1().get(i).getPrioridad(), i, 0);
            }
            for (int i = 0; i < 15; i++) {
                tabla1.setValueAt(a.getNivel1().get(i).getNombre(), i, 1);
            }
            for (int i = 0; i < 15; i++) {
                tabla1.setValueAt(a.getNivel1().get(i).getRafaga(), i, 2);
            }
        }
    }else{
            if (Integer.parseInt(prioridad.getText())==2) {
            if (a.getNivel2().size()< 15) {
            for (int i = 0; i < a.getNivel2().size(); i++) {
            tabla2.setValueAt(a.getNivel2().get(i).getPrioridad(), i, 0);
            }
            for (int i = 0; i < a.getNivel2().size(); i++) {
                tabla2.setValueAt(a.getNivel2().get(i).getNombre(), i, 1);
            }
            for (int i = 0; i < a.getNivel2().size(); i++) {
                tabla2.setValueAt(a.getNivel2().get(i).getRafaga(), i, 2);
            }
            
        }else{
            for (int i = 0; i < 15; i++) {
            tabla2.setValueAt(a.getNivel2().get(i).getPrioridad(), i, 0);
            }
            for (int i = 0; i < 15; i++) {
                tabla2.setValueAt(a.getNivel2().get(i).getNombre(), i, 1);
            }
            for (int i = 0; i < 15; i++) {
                tabla2.setValueAt(a.getNivel2().get(i).getRafaga(), i, 2);
            }
        }
    }else{
            if (Integer.parseInt(prioridad.getText())==3) {
            if (a.getNivel3().size()< 15) {
            for (int i = 0; i < a.getNivel3().size(); i++) {
            tabla3.setValueAt(a.getNivel3().get(i).getPrioridad(), i, 0);
            }
            for (int i = 0; i < a.getNivel3().size(); i++) {
                tabla3.setValueAt(a.getNivel3().get(i).getNombre(), i, 1);
            }
            for (int i = 0; i < a.getNivel3().size(); i++) {
                tabla3.setValueAt(a.getNivel3().get(i).getRafaga(), i, 2);
            }
            
        }else{
            for (int i = 0; i < 15; i++) {
            tabla3.setValueAt(a.getNivel3().get(i).getPrioridad(), i, 0);
            }
            for (int i = 0; i < 15; i++) {
                tabla3.setValueAt(a.getNivel3().get(i).getNombre(), i, 1);
            }
            for (int i = 0; i < 15; i++) {
                tabla3.setValueAt(a.getNivel3().get(i).getRafaga(), i, 2);
            }
        }
    }
            }
        }
        error.setText("Proceso agregado.");
    
    }                                          

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        
        t.start();
        btnIniciar.setEnabled(false);
        btnIniciar.setText("Reanudar");
        btnPausa.setEnabled(true);
        btnDetener.setEnabled(true);
        error.setText("");
    }                                          

    private void btnPausaActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        
        t.stop();
        btnIniciar.setEnabled(true);
        btnPausa.setEnabled(false);
        error.setText("Pausa.");
    }                                        

    private void btnDetenerActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        
        if (t.isRunning()) {
            t.stop();
            btnIniciar.setEnabled(true);
        }
        btnIniciar.setText("Iniciar");
        btnPausa.setEnabled(false);
        btnDetener.setEnabled(false);
        h=0; m=0; s=0; cs=0;
        actualizarLabel();
        error.setText("Se ha detenido.");
    }                                          

     private Timer t;
    private int h, m, s, cs;
    private ActionListener acciones = new ActionListener(){
        
        @Override
        public void actionPerformed(ActionEvent ae) {
            cs++;
            if (cs==100) {
                cs=0;
                ++s;
                if (!a.getNivel1().isEmpty()) {
                    actualizarProcesos();
                }else{
                    if (!a.getNivel2().isEmpty()) {
                        actualizarProcesos();
                    }else{
                        if (!a.getNivel3().isEmpty()) {
                            actualizarProcesos();
                        
                        }else{
                    error.setText("No hay procesos en espera.");
                    t.stop();
                    btnIniciar.setEnabled(true);
                    btnPausa.setEnabled(false);
                }
            }   
            if (s==60) {
                s=0;
                ++m;
            }
            if (m==60) {
                m=0;
                ++h;
            }
            actualizarLabel();
        }
            }
        }
        
    };
    
      private void actualizarTabla1(){
        
        if (a.getNivel1().size()< 15) {
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel1().size())
                        tabla1.setValueAt(a.getNivel1().get(i).getPrioridad(), i, 0);
                    else
                        tabla1.setValueAt("", i, 0);
                }
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel1().size())
                        tabla1.setValueAt(a.getNivel1().get(i).getNombre(), i, 1);
                    else
                        tabla1.setValueAt("", i, 1);
                }
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel1().size())
                        tabla1.setValueAt(a.getNivel1().get(i).getRafaga(), i, 2);
                    else
                        tabla1.setValueAt("", i, 2);
                }
            }else{
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel1().size())
                        tabla1.setValueAt(a.getNivel1().get(i).getPrioridad(), i, 0);
                    else
                        tabla1.setValueAt("", i, 0);
                }
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel1().size())
                        tabla1.setValueAt(a.getNivel1().get(i).getNombre(), i, 1);
                    else
                        tabla1.setValueAt("", i, 1);
                }
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel1().size())
                        tabla1.setValueAt(a.getNivel1().get(i).getRafaga(), i, 2);
                    else
                        tabla1.setValueAt("", i, 2);
                }
                 for (int i = 0; i < 15; i++) {
                    tabla1.setValueAt(a.getNivel1().get(i).getPrioridad(), i, 0);
                }
                for (int i = 0; i < 15; i++) {
                    tabla1.setValueAt(a.getNivel1().get(i).getNombre(), i, 1);
                }
                for (int i = 0; i < 15; i++) {
                    tabla1.setValueAt(a.getNivel1().get(i).getRafaga(), i, 2);
                }
            }
    }
     
     private void actualizarTabla2(){
        
        if (a.getNivel2().size()< 15) {
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel2().size())
                        tabla2.setValueAt(a.getNivel2().get(i).getPrioridad(), i, 0);
                    else
                        tabla2.setValueAt("", i, 0);
                }
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel2().size())
                        tabla2.setValueAt(a.getNivel2().get(i).getNombre(), i, 1);
                    else
                        tabla2.setValueAt("", i, 1);
                }
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel2().size())
                        tabla2.setValueAt(a.getNivel2().get(i).getRafaga(), i, 2);
                    else
                        tabla2.setValueAt("", i, 2);
                }
            }else{
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel2().size())
                        tabla2.setValueAt(a.getNivel2().get(i).getPrioridad(), i, 0);
                    else
                        tabla2.setValueAt("", i, 0);
                }
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel2().size())
                        tabla2.setValueAt(a.getNivel2().get(i).getNombre(), i, 1);
                    else
                        tabla2.setValueAt("", i, 1);
                }
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel2().size())
                        tabla2.setValueAt(a.getNivel2().get(i).getRafaga(), i, 2);
                    else
                        tabla2.setValueAt("", i, 2);
                }
                for (int i = 0; i < 15; i++) {
                    tabla2.setValueAt(a.getNivel2().get(i).getPrioridad(), i, 0);
                }
                for (int i = 0; i < 15; i++) {
                    tabla2.setValueAt(a.getNivel2().get(i).getNombre(), i, 1);
                }
                for (int i = 0; i < 15; i++) {
                    tabla2.setValueAt(a.getNivel2().get(i).getRafaga(), i, 2);
                }
            }
    }
     
     private void actualizarTabla3(){
        
        if (a.getNivel3().size()< 15) {
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel3().size())
                        tabla3.setValueAt(a.getNivel3().get(i).getPrioridad(), i, 0);
                    else
                        tabla3.setValueAt("", i, 0);
                }
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel3().size())
                        tabla3.setValueAt(a.getNivel3().get(i).getNombre(), i, 1);
                    else
                        tabla3.setValueAt("", i, 1);
                }
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel3().size())
                        tabla3.setValueAt(a.getNivel3().get(i).getRafaga(), i, 2);
                    else
                        tabla3.setValueAt("", i, 2);
                }
            }else{
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel3().size())
                        tabla3.setValueAt(a.getNivel3().get(i).getPrioridad(), i, 0);
                    else
                        tabla3.setValueAt("", i, 0);
                }
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel3().size())
                        tabla3.setValueAt(a.getNivel3().get(i).getNombre(), i, 1);
                    else
                        tabla3.setValueAt("", i, 1);
                }
                for (int i = 0; i < 15; i++) {
                    if (i < a.getNivel3().size())
                        tabla3.setValueAt(a.getNivel3().get(i).getRafaga(), i, 2);
                    else
                        tabla3.setValueAt("", i, 2);
                }
                for (int i = 0; i < 15; i++) {
                    tabla3.setValueAt(a.getNivel3().get(i).getPrioridad(), i, 0);
                }
                for (int i = 0; i < 15; i++) {
                    tabla3.setValueAt(a.getNivel3().get(i).getNombre(), i, 1);
                }
                for (int i = 0; i < 15; i++) {
                    tabla3.setValueAt(a.getNivel3().get(i).getRafaga(), i, 2);
                }
            }
    }
     
     private void actualizarLabel(){
        String tiempo = (h<=9?"0":"")+h+":"+(m<=9?"0":"")+m+":"+(s<=9?"0":"")+s+":"+(cs<=9?"0":"")+cs;
        etiquetaTiempo.setText(tiempo);
    }
     
     private void actualizarProcesos(){
         if (!a.getNivel1().isEmpty()) {
            if ((a.getNivel1().get(0).getRafaga()<=a.getQuantum())) {
            a.getNivel1().remove(0);
            actualizarTabla1();
        }else{
            a.getNivel1().get(0).setRafaga(a.getNivel1().get(0).getRafaga()-a.getQuantum());
            a.getNivel2().add(a.getNivel1().get(0));
            a.getNivel1().remove(0);
            actualizarTabla1();
            actualizarTabla2();
        }
         }else{
             if (!a.getNivel2().isEmpty()) {
            if ((a.getNivel2().get(0).getRafaga()<=a.getQuantum())) {
            a.getNivel2().remove(0);
            actualizarTabla2();
        }else{
            a.getNivel2().get(0).setRafaga(a.getNivel2().get(0).getRafaga()-a.getQuantum());
            a.getNivel3().add(a.getNivel2().get(0));
            a.getNivel2().remove(0);
            actualizarTabla2();
            actualizarTabla3();
        }
             }else{
             if ((a.getNivel3().get(0).getRafaga()<=a.getQuantum())) {
            a.getNivel3().remove(0);
            actualizarTabla3();
        }else{
            a.getNivel3().get(0).setRafaga(a.getNivel3().get(0).getRafaga()-a.getQuantum());
            actualizarTabla3();
        }
             }
         }
      
        
        
    }
     
    
    
    /**
     * @param args the command line arguments
     */
     public  void iniciar() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MultinivelInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MultinivelInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MultinivelInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MultinivelInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MultinivelInterfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnDetener;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnPausa;
    private javax.swing.JLabel error;
    private javax.swing.JLabel etiquetaTiempo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField prioridad;
    private javax.swing.JTextField rafaga;
    private javax.swing.JTable tabla1;
    private javax.swing.JTable tabla2;
    private javax.swing.JTable tabla3;
    // End of variables declaration                   
}
